name: Build and Publish Docker Image

on:
  # Run every Monday at 2 AM UTC
  schedule:
    - cron: '0 2 * * 1'

  # Allow manual trigger
  workflow_dispatch:

  # Run on new releases
  release:
    types: [published]

  # Run on push to main branch (when dockerfile changes)
  push:
    branches:
      - main
      - master
    paths:
      - 'dockerfile'
      - '.github/workflows/build-and-publish.yml'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # Set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
            # Use semantic versioning from package.json or release
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            # Use branch name for non-default branches
            type=ref,event=branch
            # Use tag name for releases
            type=ref,event=tag
            # Add date timestamp
            type=schedule,pattern={{date 'YYYYMMDD'}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Image digest
        run: echo "Image pushed with digest ${{ steps.build.outputs.digest }}"
